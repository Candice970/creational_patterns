from datetime import datetime
from typing import List
import copy
import unittest

# -------------------- Product --------------------
class Product:
    def __init__(self, product_id: str, name: str, price: float):
        self._product_id = product_id
        self._name = name
        self._price = price

    @property
    def product_id(self):
        return self._product_id

    @property
    def name(self):
        return self._name

    @property
    def price(self):
        return self._price

# -------------------- Category --------------------
class Category:
    def __init__(self, category_id: str, name: str):
        self._category_id = category_id
        self._name = name
        self._products: List[Product] = []

    def add_product(self, product: Product):
        self._products.append(product)

    def remove_product(self, product: Product):
        self._products.remove(product)

# -------------------- Supplier --------------------
class Supplier:
    def __init__(self, supplier_id: str, name: str, contact_info: str):
        self._supplier_id = supplier_id
        self._name = name
        self._contact_info = contact_info
        self._products: List[Product] = []

    def supply_product(self, product: Product):
        self._products.append(product)

# -------------------- Order --------------------
class Order:
    def __init__(self, order_id: str, date: str, status: str):
        self._order_id = order_id
        self._date = date
        self._status = status
        self._products: List[Product] = []

    def place_order(self, products: List[Product]):
        self._products.extend(products)
        self._status = "Placed"

    def cancel_order(self):
        self._status = "Cancelled"
        self._products.clear()

    @property
    def total_amount(self):
        return sum(product.price for product in self._products)

# -------------------- User --------------------
class User:
    def __init__(self, user_id: str, name: str, role: str):
        self._user_id = user_id
        self._name = name
        self._role = role
        self._orders: List[Order] = []

    def login(self) -> bool:
        return True  # Simulate login logic

    def place_order(self, order: Order):
        self._orders.append(order)

# -------------------- InventoryLog --------------------
class InventoryLog:
    def __init__(self, log_id: str, action: str, product_id: str):
        self._log_id = log_id
